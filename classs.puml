@startuml
'https://plantuml.com/class-diagram

set namespaceSeparator ::

class "chatty::common::apis::chat.dart::ChatAPI" {
  {static} +Future<BaseResponseEntity> bind_fcmtoken()
  {static} +Future<BaseResponseEntity> call_notifications()
  {static} +Future<BaseResponseEntity> call_token()
  {static} +Future<BaseResponseEntity> send_message()
  {static} +Future<BaseResponseEntity> upload_img()
  {static} +Future<SyncMessageResponseEntity> sync_message()
}

class "chatty::common::apis::contact.dart::ContactAPI" {
  {static} +Future<ContactResponseEntity> post_contact()
}

class "chatty::common::apis::user.dart::UserAPI" {
  {static} +Future<UserLoginResponseEntity> Login()
  {static} +Future<UserLoginResponseEntity> get_profile()
  {static} +Future<BaseResponseEntity> UpdateProfile()
}

class "chatty::common::entities::base.dart::BaseResponseEntity" {
  +int? code
  +String? msg
  +String? data
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::base.dart::BindFcmTokenRequestEntity" {
  +String? fcmtoken
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::chat.dart::SyncMessageRequestEntity" {
  +int? msgid
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::chat.dart::CallRequestEntity" {
  +String? call_type
  +String? to_token
  +String? to_name
  +String? to_avatar
  +String? doc_id
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::chat.dart::CallTokenRequestEntity" {
  +String? channel_name
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::chat.dart::ChatRequestEntity" {
  +String? content
  +String? type
  +String? to_token
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::chat.dart::Chat" {
  +String? from_token
  +String? to_token
  +int? msgid
  +String? content
  +String? type
  +int? status
  +String? created_at
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::chat.dart::MsgListcontent" {
  +int? msgid
  +String? from_token
  +String? from_name
  +String? from_avatar
  +String? to_token
  +String? content
  +String? type
  +int? status
  +String? created_at
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::chat.dart::SyncMessageResponseEntity" {
  +int? code
  +String? msg
  +List<MsgListcontent>? data
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::chatcall.dart::ChatCall" {
  +String? doc_id
  +String? from_token
  +String? to_token
  +String? from_name
  +String? to_name
  +String? from_avatar
  +String? to_avatar
  +String? call_time
  +String? type
  +Timestamp? last_time
  +Map<String, dynamic> toFirestore()
}

"chatty::common::entities::chatcall.dart::ChatCall" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "chatty::common::entities::contact.dart::ContactResponseEntity" {
  +int? code
  +String? msg
  +List<ContactItem>? data
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::contact.dart::ContactItem" {
  +String? token
  +String? name
  +String? description
  +String? avatar
  +int? online
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::country.dart::Country" {
  +String name
  +String code
  +String dialCode
  +String flag
  +int hashCode
  +bool ==()
  +String toString()
  +String toSearchString()
}

class "chatty::common::entities::message.dart::Message" {
  +String? doc_id
  +String? token
  +String? name
  +String? avatar
  +String? last_msg
  +Timestamp? last_time
  +int? msg_num
  +int? online
}

"chatty::common::entities::message.dart::Message" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "chatty::common::entities::message.dart::CallMessage" {
  +String? doc_id
  +String? token
  +String? name
  +String? avatar
  +String? call_time
  +String? type
  +Timestamp? last_time
}

"chatty::common::entities::message.dart::CallMessage" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "chatty::common::entities::msg.dart::Msg" {
  +String? from_token
  +String? to_token
  +String? from_name
  +String? to_name
  +String? from_avatar
  +String? to_avatar
  +int? from_online
  +int? to_online
  +int? from_msg_num
  +int? to_msg_num
  +String? last_msg
  +Timestamp? last_time
  +int? msg_num
  +Map<String, dynamic> toFirestore()
}

"chatty::common::entities::msg.dart::Msg" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "chatty::common::entities::msgcontent.dart::Msgcontent" {
  +String? token
  +String? content
  +String? type
  +Timestamp? addtime
  +Map<String, dynamic> toFirestore()
}

"chatty::common::entities::msgcontent.dart::Msgcontent" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "chatty::common::entities::user.dart::LoginRequestEntity" {
  +int? type
  +String? name
  +String? description
  +String? email
  +String? phone
  +String? avatar
  +String? open_id
  +String? fcmtoken
  +int? online
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::user.dart::UserLoginResponseEntity" {
  +int? code
  +String? msg
  +UserItem? data
}

"chatty::common::entities::user.dart::UserLoginResponseEntity" o-- "chatty::common::entities::user.dart::UserItem"

class "chatty::common::entities::user.dart::UserItem" {
  +String? fcmtoken
  +String? access_token
  +String? token
  +String? name
  +String? description
  +String? avatar
  +int? online
  +int? type
  +Map<String, dynamic> toJson()
}

class "chatty::common::entities::user.dart::UserData" {
  +String? token
  +String? name
  +String? avatar
  +String? description
  +int? online
  +String? fcmtoken
  +Map<String, dynamic> toFirestore()
}

class "chatty::common::langs::translation_service.dart::TranslationService" {
  {static} +Locale fallbackLocale
  {static} +Locale? locale
  +Map<String, Map<String, String>> keys
}

"chatty::common::langs::translation_service.dart::TranslationService" o-- "dart::ui::Locale"
"get::get_navigation::src::root::internacionalization.dart::Translations" <|-- "chatty::common::langs::translation_service.dart::TranslationService"

class "chatty::common::middlewares::router_auth.dart::RouteAuthMiddleware" {
  +int? priority
  +RouteSettings? redirect()
}

"get::get_navigation::src::routes::route_middleware.dart::GetMiddleware" <|-- "chatty::common::middlewares::router_auth.dart::RouteAuthMiddleware"

class "chatty::common::middlewares::router_welcome.dart::RouteWelcomeMiddleware" {
  +int? priority
  +RouteSettings? redirect()
}

"get::get_navigation::src::routes::route_middleware.dart::GetMiddleware" <|-- "chatty::common::middlewares::router_welcome.dart::RouteWelcomeMiddleware"

class "chatty::common::routes::names.dart::AppRoutes" {
  {static} +String INITIAL
  {static} +String SIGN_IN
  {static} +String EmailLogin
  {static} +String Register
  {static} +String Forgot
  {static} +String Phone
  {static} +String SendCode
  {static} +String NotFound
  {static} +String Contact
  {static} +String Message
  {static} +String Profile
  {static} +String Chat
  {static} +String Photoimgview
  {static} +String VoiceCall
  {static} +String VideoCall
}

class "chatty::common::routes::observers.dart::RouteObservers" {
  +void didPush()
  +void didPop()
  +void didReplace()
  +void didRemove()
  +void didStartUserGesture()
  +void didStopUserGesture()
}

"flutter::src::widgets::routes.dart::RouteObserver" <|-- "chatty::common::routes::observers.dart::RouteObservers"

class "chatty::common::routes::pages.dart::AppPages" {
  {static} +String INITIAL
  {static} +RouteObserver<Route<dynamic>> observer
  {static} +List<String> history
  {static} +List<GetPage<dynamic>> routes
}

"chatty::common::routes::pages.dart::AppPages" o-- "flutter::src::widgets::routes.dart::RouteObserver<Route<dynamic>>"

class "chatty::common::services::storage.dart::StorageService" {
  -SharedPreferences _prefs
  {static} +StorageService to
  +Future<StorageService> init()
  +Future<bool> setString()
  +Future<bool> setBool()
  +Future<bool> setList()
  +String getString()
  +bool getBool()
  +List<String> getList()
  +Future<bool> remove()
}

"chatty::common::services::storage.dart::StorageService" o-- "shared_preferences::shared_preferences.dart::SharedPreferences"
"chatty::common::services::storage.dart::StorageService" o-- "chatty::common::services::storage.dart::StorageService"
"get::get_state_manager::src::rx_flutter::rx_disposable.dart::GetxService" <|-- "chatty::common::services::storage.dart::StorageService"

class "chatty::common::store::config.dart::ConfigStore" {
  +bool isFirstOpen
  +bool isCallVocie
  -PackageInfo? _platform
  +Locale locale
  +List<Locale> languages
  {static} +ConfigStore to
  +String version
  +bool isRelease
  +void onInit()
  +Future<void> getPlatform()
  +Future<bool> saveAlreadyOpen()
  +void onInitLocale()
  +void onLocaleUpdate()
}

"chatty::common::store::config.dart::ConfigStore" o-- "package_info::package_info.dart::PackageInfo"
"chatty::common::store::config.dart::ConfigStore" o-- "dart::ui::Locale"
"chatty::common::store::config.dart::ConfigStore" o-- "chatty::common::store::config.dart::ConfigStore"
"get::get_state_manager::src::simple::get_controllers.dart::GetxController" <|-- "chatty::common::store::config.dart::ConfigStore"

class "chatty::common::store::user.dart::UserStore" {
  -RxBool _isLogin
  +String token
  -Rx<UserItem> _profile
  {static} +UserStore to
  +bool isLogin
  +UserItem profile
  +bool hasToken
  +void onInit()
  +Future<void> setToken()
  +Future<String> getProfile()
  +Future<void> saveProfile()
  +Future<void> onLogout()
}

"chatty::common::store::user.dart::UserStore" o-- "get::get_rx::src::rx_types::rx_types.dart::RxBool"
"chatty::common::store::user.dart::UserStore" o-- "get::get_rx::src::rx_types::rx_types.dart::Rx<UserItem>"
"chatty::common::store::user.dart::UserStore" o-- "chatty::common::store::user.dart::UserStore"
"chatty::common::store::user.dart::UserStore" o-- "chatty::common::entities::user.dart::UserItem"
"get::get_state_manager::src::simple::get_controllers.dart::GetxController" <|-- "chatty::common::store::user.dart::UserStore"

class "chatty::common::style::color.dart::AppColor" {
  {static} +Color scaffoldBackground
  {static} +Color primaryText
  {static} +Color secondaryText
  {static} +Color accentColor
  {static} +Color secondaryColor
  {static} +Color warnColor
  {static} +Color borderColor
  {static} +Color pinkColor
  {static} +Color yellowColor
}

"chatty::common::style::color.dart::AppColor" o-- "dart::ui::Color"

class "chatty::common::style::theme.dart::AppTheme" {
  {static} +double horizontalMargin
  {static} +double radius
  {static} +ThemeData light
}

"chatty::common::style::theme.dart::AppTheme" o-- "flutter::src::material::theme_data.dart::ThemeData"

class "chatty::common::utils::data.dart::Countries" {
  {static} -List<Country> _list
  {static} +List<Country> list
  {static} +Country findByCode()
  {static} +Country findByName()
  {static} +Country? findByDialCode()
}

class "chatty::common::utils::FirebaseMessagingHandler.dart::FirebaseMessagingHandler" {
  {static} +AndroidNotificationChannel channel_call
  {static} +AndroidNotificationChannel channel_message
  {static} +FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin
  {static} +Future<void> config()
  {static} -Future<void> _receiveNotification()
  {static} -Future<void> _sendNotifications()
  {static} -Future<void> _showNotification()
  {static} +Future<void> firebaseMessagingBackground()
}

"chatty::common::utils::FirebaseMessagingHandler.dart::FirebaseMessagingHandler" o-- "flutter_local_notifications::src::platform_specifics::android::notification_channel.dart::AndroidNotificationChannel"
"chatty::common::utils::FirebaseMessagingHandler.dart::FirebaseMessagingHandler" o-- "flutter_local_notifications::src::flutter_local_notifications_plugin.dart::FlutterLocalNotificationsPlugin"

class "chatty::common::utils::http.dart::HttpUtil" {
  {static} -HttpUtil _instance
  +Dio dio
  +CancelToken cancelToken
  +void onError()
  +ErrorEntity createErrorEntity()
  +void cancelRequests()
  +Map<String, dynamic>? getAuthorizationHeader()
  +Future<dynamic> get()
  +Future<dynamic> post()
  +Future<dynamic> put()
  +Future<dynamic> patch()
  +Future<dynamic> delete()
  +Future<dynamic> postForm()
  +Future<dynamic> postStream()
}

"chatty::common::utils::http.dart::HttpUtil" o-- "chatty::common::utils::http.dart::HttpUtil"
"chatty::common::utils::http.dart::HttpUtil" o-- "dio::src::dio.dart::Dio"
"chatty::common::utils::http.dart::HttpUtil" o-- "dio::src::cancel_token.dart::CancelToken"

class "chatty::common::utils::http.dart::ErrorEntity" {
  +int code
  +String message
  +String toString()
}

"dart::core::Exception" <|-- "chatty::common::utils::http.dart::ErrorEntity"

class "chatty::common::utils::iconfont.dart::Iconfont" {
  {static} +IconData share
  {static} +IconData fav
  {static} +IconData sociallinkedin
  {static} +IconData socialapple
  {static} +IconData socialoctocat
  {static} +IconData socialreddit
  {static} +IconData socialsnapchat
  {static} +IconData socialskype
  {static} +IconData socialtwitter
  {static} +IconData me
  {static} +IconData tag
  {static} +IconData grid
  {static} +IconData video
  {static} +IconData message
  {static} +IconData home
}

"chatty::common::utils::iconfont.dart::Iconfont" o-- "flutter::src::widgets::icon_data.dart::IconData"

class "chatty::common::utils::loading.dart::Loading" {
  {static} +void show()
  {static} +void toast()
  {static} +void dismiss()
}

class "chatty::common::utils::logger.dart::Logger" {
  {static} +void write()
}

class "chatty::common::values::borders.dart::Borders" {
  {static} +BorderSide primaryBorder
}

"chatty::common::values::borders.dart::Borders" o-- "flutter::src::painting::borders.dart::BorderSide"

class "chatty::common::values::colors.dart::AppColors" {
  {static} +Color primaryBackground
  {static} +Color primarySecondaryBackground
  {static} +Color primaryElement
  {static} +Color primaryText
  {static} +Color primary_bg
  {static} +Color primaryElementText
  {static} +Color primarySecondaryElementText
  {static} +Color primaryThreeElementText
  {static} +Color primaryElementStatus
  {static} +Color primaryElementBg
  {static} +Color secondaryElement
  {static} +Color secondaryElementText
  {static} +Color thirdElement
  {static} +Color fourElementText
  {static} +Color thirdElementText
  {static} +Color tabBarElement
  {static} +Color tabCellSeparator
  {static} +Color chatbg
  {static} +Color morenbg
}

"chatty::common::values::colors.dart::AppColors" o-- "dart::ui::Color"

class "chatty::common::values::radii.dart::Radii" {
  {static} +BorderRadiusGeometry k6pxRadius
  {static} +BorderRadiusGeometry k54pxRadius
}

"chatty::common::values::radii.dart::Radii" o-- "flutter::src::painting::border_radius.dart::BorderRadiusGeometry"

class "chatty::common::values::shadows.dart::Shadows" {
  {static} +BoxShadow primaryShadow
}

"chatty::common::values::shadows.dart::Shadows" o-- "flutter::src::painting::box_shadow.dart::BoxShadow"

class "chatty::firebase_options.dart::DefaultFirebaseOptions" {
  {static} +FirebaseOptions android
  {static} +FirebaseOptions ios
  {static} +FirebaseOptions currentPlatform
}

"chatty::firebase_options.dart::DefaultFirebaseOptions" o-- "firebase_core_platform_interface::firebase_core_platform_interface.dart::FirebaseOptions"

class "chatty::global.dart::Global" {
  {static} +Future<dynamic> init()
}

class "chatty::main.dart::MyApp" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "chatty::main.dart::MyApp"

class "chatty::pages::contact::bindings.dart::ContactBinding" {
  +void dependencies()
}

"get::get_instance::src::bindings_interface.dart::Bindings" <|-- "chatty::pages::contact::bindings.dart::ContactBinding"

class "chatty::pages::contact::controller.dart::ContactController" {
  +String title
  +ContactState state
  +String? token
  +FirebaseFirestore db
  +void onReady()
  +Future<void> goChat()
  +dynamic asyncLoadAllData()
}

"chatty::pages::contact::controller.dart::ContactController" o-- "chatty::pages::contact::state.dart::ContactState"
"chatty::pages::contact::controller.dart::ContactController" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"get::get_state_manager::src::simple::get_controllers.dart::GetxController" <|-- "chatty::pages::contact::controller.dart::ContactController"

class "chatty::pages::contact::state.dart::ContactState" {
  +RxList<ContactItem> contactList
}

"chatty::pages::contact::state.dart::ContactState" o-- "get::get_rx::src::rx_types::rx_types.dart::RxList<ContactItem>"

class "chatty::pages::contact::view.dart::ContactPage" {
  -AppBar _buildAppBar()
  +Widget build()
}

"get::get_state_manager::src::simple::get_view.dart::GetView" <|-- "chatty::pages::contact::view.dart::ContactPage"

class "chatty::pages::contact::widgets::contact_list.dart::ContactList" {
  -Widget _buildListItem()
  +Widget build()
}

"get::get_state_manager::src::simple::get_view.dart::GetView" <|-- "chatty::pages::contact::widgets::contact_list.dart::ContactList"

class "chatty::pages::frame::sign_in::bindings.dart::SignInBinding" {
  +void dependencies()
}

"get::get_instance::src::bindings_interface.dart::Bindings" <|-- "chatty::pages::frame::sign_in::bindings.dart::SignInBinding"

class "chatty::pages::frame::sign_in::controller.dart::SignInController" {
  +SignInState state
  -GoogleSignIn _googleSignIn
  +Future<void> handleSignIn()
  +dynamic asyncPostAllData()
}

"chatty::pages::frame::sign_in::controller.dart::SignInController" o-- "chatty::pages::frame::sign_in::state.dart::SignInState"
"chatty::pages::frame::sign_in::controller.dart::SignInController" o-- "google_sign_in::google_sign_in.dart::GoogleSignIn"
"get::get_state_manager::src::simple::get_controllers.dart::GetxController" <|-- "chatty::pages::frame::sign_in::controller.dart::SignInController"

class "chatty::pages::frame::sign_in::state.dart::SignInState" {
}

class "chatty::pages::frame::sign_in::view.dart::SignInPage" {
  -Widget _buuildLogo()
  -Widget _buildThirdPartyLogin()
  -Widget _buildOrWidget()
  -Widget _buildSignInWidget()
  +Widget build()
}

"get::get_state_manager::src::simple::get_view.dart::GetView" <|-- "chatty::pages::frame::sign_in::view.dart::SignInPage"

class "chatty::pages::frame::welcome::bindings.dart::WelcomeBinding" {
  +void dependencies()
}

"get::get_instance::src::bindings_interface.dart::Bindings" <|-- "chatty::pages::frame::welcome::bindings.dart::WelcomeBinding"

class "chatty::pages::frame::welcome::controller.dart::WelcomeController" {
  +String title
  +WelcomeState state
  +void onReady()
}

"chatty::pages::frame::welcome::controller.dart::WelcomeController" o-- "chatty::pages::frame::welcome::state.dart::WelcomeState"
"get::get_state_manager::src::simple::get_controllers.dart::GetxController" <|-- "chatty::pages::frame::welcome::controller.dart::WelcomeController"

class "chatty::pages::frame::welcome::state.dart::WelcomeState" {
}

class "chatty::pages::frame::welcome::view.dart::WelcomePage" {
  -Widget _buildPageHeadTitle()
  +Widget build()
}

"get::get_state_manager::src::simple::get_view.dart::GetView" <|-- "chatty::pages::frame::welcome::view.dart::WelcomePage"

class "chatty::pages::message::bindings.dart::MessageBinding" {
  +void dependencies()
}

"get::get_instance::src::bindings_interface.dart::Bindings" <|-- "chatty::pages::message::bindings.dart::MessageBinding"

class "chatty::pages::message::chat::bindings.dart::ChatBinding" {
  +void dependencies()
}

"get::get_instance::src::bindings_interface.dart::Bindings" <|-- "chatty::pages::message::chat::bindings.dart::ChatBinding"

class "chatty::pages::message::chat::controller.dart::ChatController" {
  +ChatState state
  +String doc_id
  +TextEditingController myInputController
  +String? token
  +FirebaseFirestore db
  +dynamic listener
  +bool isLoadmore
  -File? _photo
  -ImagePicker _picker
  +ScrollController myScrollController
  +void goMore()
  +void audioCall()
  +void onInit()
  +void onReady()
  +Future<dynamic> imgFromGallery()
  +Future<dynamic> uploadFile()
  +Future<void> asyncLoadMoreData()
  +Future<void> sendMessage()
  +Future<void> sendImageMessage()
  +void closeAllPop()
  +void onClose()
}

"chatty::pages::message::chat::controller.dart::ChatController" o-- "chatty::pages::message::chat::state.dart::ChatState"
"chatty::pages::message::chat::controller.dart::ChatController" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"chatty::pages::message::chat::controller.dart::ChatController" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"chatty::pages::message::chat::controller.dart::ChatController" o-- "dart::io::File"
"chatty::pages::message::chat::controller.dart::ChatController" o-- "image_picker::image_picker.dart::ImagePicker"
"chatty::pages::message::chat::controller.dart::ChatController" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"get::get_state_manager::src::simple::get_controllers.dart::GetxController" <|-- "chatty::pages::message::chat::controller.dart::ChatController"

class "chatty::pages::message::chat::state.dart::ChatState" {
  +RxList<Msgcontent> msgcontentList
  +RxString to_token
  +RxString to_name
  +RxString to_avatar
  +RxString to_online
  +RxBool more_status
  +RxBool isloading
}

"chatty::pages::message::chat::state.dart::ChatState" o-- "get::get_rx::src::rx_types::rx_types.dart::RxList<Msgcontent>"
"chatty::pages::message::chat::state.dart::ChatState" o-- "get::get_rx::src::rx_types::rx_types.dart::RxString"
"chatty::pages::message::chat::state.dart::ChatState" o-- "get::get_rx::src::rx_types::rx_types.dart::RxBool"

class "chatty::pages::message::chat::view.dart::ChatPage" {
  -AppBar _buildAppBar()
  +Widget build()
}

"get::get_state_manager::src::simple::get_view.dart::GetView" <|-- "chatty::pages::message::chat::view.dart::ChatPage"

class "chatty::pages::message::chat::widgets::chat_list.dart::ChatList" {
  +Widget build()
}

"get::get_state_manager::src::simple::get_view.dart::GetView" <|-- "chatty::pages::message::chat::widgets::chat_list.dart::ChatList"

class "chatty::pages::message::controller.dart::MessageController" {
  +MessageState state
  +Future<void> goProfile()
  +void onReady()
  +void onInit()
  +void getProfile()
  +dynamic firebaseMessageSetup()
}

"chatty::pages::message::controller.dart::MessageController" o-- "chatty::pages::message::state.dart::MessageState"
"get::get_state_manager::src::simple::get_controllers.dart::GetxController" <|-- "chatty::pages::message::controller.dart::MessageController"

class "chatty::pages::message::state.dart::MessageState" {
  +Rx<UserItem> head_detail
}

"chatty::pages::message::state.dart::MessageState" o-- "get::get_rx::src::rx_types::rx_types.dart::Rx<UserItem>"

class "chatty::pages::message::view.dart::MessagePage" {
  -Widget _headBar()
  +Widget build()
}

"get::get_state_manager::src::simple::get_view.dart::GetView" <|-- "chatty::pages::message::view.dart::MessagePage"

class "chatty::pages::message::voicecall::bindings.dart::VoiceCallBinding" {
  +void dependencies()
}

"get::get_instance::src::bindings_interface.dart::Bindings" <|-- "chatty::pages::message::voicecall::bindings.dart::VoiceCallBinding"

class "chatty::pages::message::voicecall::controller.dart::VoiceCallController" {
  +VoiceCallState state
  +AudioPlayer player
  +String appId
  +FirebaseFirestore db
  +String? profile_token
  +RtcEngine engine
  +ChannelProfileType channelProfileType
  +void onInit()
  +Future<void> initEngine()
  +Future<void> sendNotification()
  +Future<String> getToken()
  +Future<void> joinChannel()
  +Future<void> leaveChannel()
  -Future<void> _dispose()
  +void onClose()
  +void dispose()
}

"chatty::pages::message::voicecall::controller.dart::VoiceCallController" o-- "chatty::pages::message::voicecall::state.dart::VoiceCallState"
"chatty::pages::message::voicecall::controller.dart::VoiceCallController" o-- "just_audio::just_audio.dart::AudioPlayer"
"chatty::pages::message::voicecall::controller.dart::VoiceCallController" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"chatty::pages::message::voicecall::controller.dart::VoiceCallController" o-- "agora_rtc_engine::src::agora_rtc_engine.dart::RtcEngine"
"chatty::pages::message::voicecall::controller.dart::VoiceCallController" o-- "agora_rtc_engine::src::agora_base.dart::ChannelProfileType"
"get::get_state_manager::src::simple::get_controllers.dart::GetxController" <|-- "chatty::pages::message::voicecall::controller.dart::VoiceCallController"

class "chatty::pages::message::voicecall::state.dart::VoiceCallState" {
  +RxBool isJoined
  +RxBool openMicrophone
  +RxBool enableSpeaker
  +RxString callTime
  +RxString callStatus
  +RxString to_token
  +RxString to_name
  +RxString to_avatar
  +RxString call_role
  +RxString channelId
  +RxString doc_id
}

"chatty::pages::message::voicecall::state.dart::VoiceCallState" o-- "get::get_rx::src::rx_types::rx_types.dart::RxBool"
"chatty::pages::message::voicecall::state.dart::VoiceCallState" o-- "get::get_rx::src::rx_types::rx_types.dart::RxString"

class "chatty::pages::message::voicecall::view.dart::VoiceCallPage" {
  +Widget build()
}

"get::get_state_manager::src::simple::get_view.dart::GetView" <|-- "chatty::pages::message::voicecall::view.dart::VoiceCallPage"

class "chatty::pages::profile::bindings.dart::ProfileBinding" {
  +void dependencies()
}

"get::get_instance::src::bindings_interface.dart::Bindings" <|-- "chatty::pages::profile::bindings.dart::ProfileBinding"

class "chatty::pages::profile::controller.dart::ProfileController" {
  +String title
  +ProfileState state
  +void onInit()
  +Future<void> goLogout()
}

"chatty::pages::profile::controller.dart::ProfileController" o-- "chatty::pages::profile::state.dart::ProfileState"
"get::get_state_manager::src::simple::get_controllers.dart::GetxController" <|-- "chatty::pages::profile::controller.dart::ProfileController"

class "chatty::pages::profile::state.dart::ProfileState" {
  +Rx<UserItem> profileDetail
}

"chatty::pages::profile::state.dart::ProfileState" o-- "get::get_rx::src::rx_types::rx_types.dart::Rx<UserItem>"

class "chatty::pages::profile::view.dart::ProfilePage" {
  -AppBar _buildAppbar()
  -Widget _buildProfilePhoto()
  -Widget _buildCompleteBtn()
  -Widget _buildLogoutBtn()
  +Widget build()
}

"get::get_state_manager::src::simple::get_view.dart::GetView" <|-- "chatty::pages::profile::view.dart::ProfilePage"



@enduml